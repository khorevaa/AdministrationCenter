&НаСервере
Процедура ПолучитьСеансыПользователейНаСервере(МассивБаз)
	
	Для каждого ТекущаяБаза из МассивБаз цикл
		Кластер = ТекущаяБаза.Кластер;
		
		Попытка
			СоединениеСАгентомСервера = РаботаСПодключениямиCOM.ПолучитьСоединениеСАгентомСервера(Кластер);
			СоединениеСКластером = РаботаСПодключениямиCOM.ПолучитьКластер(Кластер, СоединениеСАгентомСервера); 
			
			БазаКластера = РаботаСПодключениямиCOM.ПолучитьИБКластера(СоединениеСАгентомСервера, СоединениеСКластером, ТекущаяБаза.ИмяБазыВКластере);
			
			Если БазаКластера = Неопределено Тогда
				Сообщить("База не найдена в списке баз кластера. Убедитесь что база присутствует в кластере и ее имя совпадает с именем в текущей базе");
				Возврат;
			КонецЕсли;
			
			//Получаем сеансы и соединения текущей базы
			СеансыТекущиейБазы = СоединениеСАгентомСервера.GetInfoBaseSessions(СоединениеСКластером,БазаКластера);
			Если СеансыТекущиейБазы.GetLength() > 0 Тогда
				//1-ый уровень
				Уровень1Группировки = ДеревоАктивныхПользователей.ПолучитьЭлементы();
				НоваяСтрокаУровень1 = Уровень1Группировки.Добавить();
				НоваяСтрокаУровень1.Пользователь = ТекущаяБаза;
				Для каждого Сеанс из СеансыТекущиейБазы цикл
					//2-ой уровень
					Уровень2Группировки = НоваяСтрокаУровень1.ПолучитьЭлементы();
					НоваяСтрокаУровень2 = Уровень2Группировки.Добавить();
					НоваяСтрокаУровень2.НачалоСеанса = Сеанс.StartedAt;
					НоваяСтрокаУровень2.ПоследняяАктивность = Сеанс.LastActiveAt;
					НоваяСтрокаУровень2.НомерСеанса = Сеанс.SessionID;
					НоваяСтрокаУровень2.Пользователь = Сеанс.UserName;
					НоваяСтрокаУровень2.Компьютер = Сеанс.Host;
					НоваяСтрокаУровень2.Приложение = Сеанс.AppID;
				КонецЦикла;
			КонецЕсли;
			
			
		Исключение
			
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = ОписаниеОшибки();
			Сообщение.Сообщить();
			
		КонецПопытки;
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ЗавершитьСеансыПользователейНаСервере(ТекущаяБаза , СеансПользователя)
	
	Кластер = ТекущаяБаза.Кластер;
	
	Попытка
		СоединениеСАгентомСервера = РаботаСПодключениямиCOM.ПолучитьСоединениеСАгентомСервера(Кластер);
		СоединениеСКластером = РаботаСПодключениямиCOM.ПолучитьКластер(Кластер, СоединениеСАгентомСервера); 

		БазаКластера = РаботаСПодключениямиCOM.ПолучитьИБКластера(СоединениеСАгентомСервера, СоединениеСКластером, ТекущаяБаза.ИмяБазыВКластере);
		
		Если БазаКластера = Неопределено Тогда
			Сообщить("База не найдена в списке баз кластера. Убедитесь что база присутствует в кластере и ее имя совпадает с именем в текущей базе");
			Возврат;
		КонецЕсли;
		
		///////////////////////////////////////
		//ЗАВЕРШАЕМ CЕАНС БАЗЫ////
		///////////////////////////////////////
		
		//Получаем сеансы и соединения текущей базы
		СеансыТекущиейБазы = СоединениеСАгентомСервера.GetInfoBaseSessions(СоединениеСКластером,БазаКластера);
		Для каждого Сеанс из СеансыТекущиейБазы цикл
			//Условию по завершению сеанса пользователя
			Если СеансПользователя <> Неопределено Тогда
				Если Сеанс.SessionID = СеансПользователя.НомерСеанса
					И Сеанс.UserName = СеансПользователя.Пользователь 
					И Сеанс.Host = СеансПользователя.Компьютер 
					И Сеанс.AppID = СеансПользователя.Приложение Тогда
					//Завершаем сеанс
					СоединениеСАгентомСервера.TerminateSession(СоединениеСКластером, Сеанс);
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
		
		///////////////////////////////////////
		//ЗАВЕРШАЕМ СОЕДИНЕНИЯ////
		///////////////////////////////////////
		
		//ЗАВЕРШАТЬ СОЕДИНЕНИЯ НЕ ТРЕБУЕТСЯ.
		//ЦИТАТА ИЗ РУКОВОДСТВА ПО РАЗРАБОТКЕ И АДМИНИСТРИРОВАНИЮ С ИТС:
		//Если удаляется сеанс, назначенный соединению, то происходит разрыв этого соединения. 
		//ЭТО ПРАВИЛО ПРИМЕНИМО К 8.2 И 8.3. В РЕЗУЛЬТАТЕ ПРОВЕРКИ ЭТО ПОДТВЕРДИЛОСЬ
		
	Исключение
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = ОписаниеОшибки();
		Сообщение.Сообщить();
	КонецПопытки;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗавершитьСеанс(Команда)
	
	Для каждого ТекущаяСтрока из Элементы.ДеревоАктивныхПользователей.ВыделенныеСтроки цикл
		СеансПользователя = Новый Структура("Пользователь, Компьютер, Приложение, НомерСеанса");
		ТекущиеДанныеПользователя = Элементы.ДеревоАктивныхПользователей.ДанныеСтроки(ТекущаяСтрока);
		Группировка1Уровня = ТекущиеДанныеПользователя.ПолучитьРодителя(); 
		Если Группировка1Уровня = Неопределено Тогда
			Продолжить;
		Иначе
			ТекущаяИнформационнаяБаза = Группировка1Уровня.Пользователь;//на 1-ом уровне имеет значение базы
		КонецЕсли;
		
		ЗаполнитьЗначенияСвойств(СеансПользователя, ТекущиеДанныеПользователя);
		
		ЗавершитьСеансыПользователейНаСервере(ТекущаяИнформационнаяБаза, СеансПользователя);
		
		//Убираем пользователя из списка активных
		Группировка2Уровня = Группировка1Уровня.ПолучитьЭлементы();
		Группировка2Уровня.Удалить(ТекущиеДанныеПользователя);
		
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ПолучитьАктивныхПользователей(Команда)
	
	ОчиститьДеревоАктивныхПользователей();

	ПолучитьСеансыПользователейНаСервере(фКешЗначений.МассивБаз);
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	фКешЗначений = Новый Структура;
	фКешЗначений.Вставить("МассивБаз", Параметры.ИнформационныеБазы);
	ПолучитьСеансыПользователейНаСервере(фКешЗначений.МассивБаз);

КонецПроцедуры


Процедура ОчиститьДеревоАктивныхПользователей()
	
	тДерево = РеквизитФормыВЗначение("ДеревоАктивныхПользователей");	 
	тДерево.Строки.Очистить();	 
	ЗначениеВРеквизитФормы(тДерево, "ДеревоАктивныхПользователей");
	
КонецПроцедуры

