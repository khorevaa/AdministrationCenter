
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если НЕ ЗначениеЗаполнено(Параметры.Ключ) Тогда 
		ОпределитьГруппуЗадачи();
	КонецЕсли;
	
	ЗадачаОбъект = РеквизитФормыВЗначение("Объект");
	ДанныеОписанияЗадачи = ЗадачаОбъект.ХранилищеОписаниеЗадачи.Получить();
	
	Если ТипЗнч(ДанныеОписанияЗадачи) = Тип("ФорматированныйДокумент") Тогда
		ОписаниеЗадачи = ДанныеОписанияЗадачи;
	ИначеЕсли ТипЗнч(ДанныеОписанияЗадачи) = Тип("Строка") Тогда
		ОписаниеЗадачи.Добавить(ДанныеОписанияЗадачи, ТипЭлементаФорматированногоДокумента.Текст);
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Объект.ДатаСоздания) Тогда
		Объект.ДатаСоздания = ТекущаяДата();
		Объект.СтатусЗадачи = Перечисления.СтатусыЗадач.Открыта;
		Объект.Исполнитель = ПараметрыСеанса.ТекущийПользователь;
		Объект.СрокИсполнения = ТекущаяДата()+86400;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	ТекущийОбъект.ХранилищеОписаниеЗадачи = Новый ХранилищеЗначения(ОписаниеЗадачи);
	
КонецПроцедуры

&НаКлиенте
Процедура СтатусЗадачиПриИзменении(Элемент)
	
	Если Объект.СтатусЗадачи = ПредопределенноеЗначение("Перечисление.СтатусыЗадач.ВПроцессе") Тогда 
		Если НЕ ЗначениеЗаполнено(Объект.ДатаПринятияКИсполнению) Тогда
			Объект.ДатаПринятияКИсполнению = ТекущаяДата();
		КонецЕсли;
		Объект.Выполнена = Ложь;
	КонецЕсли;
	
	Если Объект.СтатусЗадачи = ПредопределенноеЗначение("Перечисление.СтатусыЗадач.Закрыта") Тогда
		
		Если НЕ ЗначениеЗаполнено(Объект.ДатаИсполнения) Тогда
			Объект.ДатаИсполнения = ТекущаяДата();
		КонецЕсли;
		
		Если НЕ ЗначениеЗаполнено(Объект.ДатаПринятияКИсполнению) Тогда
			Объект.ДатаПринятияКИсполнению = ТекущаяДата();
		КонецЕсли;
		Объект.Выполнена = Истина;
		
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	//Объект.ДатаСоздания = ТекущаяДата();
КонецПроцедуры

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ВыполненаВыполнить(Команда)

	Объект.СтатусЗадачи = ПредопределенноеЗначение("Перечисление.СтатусыЗадач.Закрыта"); 
	
	СтатусЗадачиПриИзменении("");
	
КонецПроцедуры

&НаКлиенте
Процедура ЭтоГруппаПодзадачПриИзменении(Элемент)
	
	//Элементы.СтатусЗадачи.Видимость = Объект.ЭтоГруппаПодзадач;
	//Элементы.Инициатор.Видимость = Объект.ЭтоГруппаПодзадач;
	//Элементы.Пользователь.Видимость = Объект.ЭтоГруппаПодзадач;
	//Элементы.Дата.Видимость = Объект.ЭтоГруппаПодзадач;
	//Элементы.ДатаПринятияКИсполнению.Видимость = Объект.ЭтоГруппаПодзадач;
	//Элементы.СтатусЗадачи.Видимость = Объект.ЭтоГруппаПодзадач;
	//Элементы.СтатусЗадачи.Видимость = Объект.ЭтоГруппаПодзадач;
	
КонецПроцедуры



#КонецОбласти

&НаСервере
Процедура ОпределитьГруппуЗадачи()
	
	Если НЕ Объект.Родитель.ЭтоГруппаПодзадач Тогда
		Пока Объект.Родитель <> Справочники.ЗадачиИсполнителя.ПустаяСсылка() 
			И Объект.Родитель.ЭтоГруппаПодзадач = Ложь цикл
				Объект.Родитель = Объект.Родитель.Родитель;
		КонецЦикла;
	КонецЕсли;

КонецПроцедуры

&НаСервереБезКонтекста
Процедура РодительНачалоВыбораНаСервере()
	// Вставить содержимое обработчика.
КонецПроцедуры

&НаКлиенте
Процедура РодительНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	РодительНачалоВыбораНаСервере();
КонецПроцедуры
